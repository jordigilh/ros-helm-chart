apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ros-ocp.fullname" . }}-kruize
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
    app.kubernetes.io/component: optimization
    app.kubernetes.io/name: kruize
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ros-ocp.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: optimization
      app.kubernetes.io/name: kruize
  template:
    metadata:
      labels:
        {{- include "ros-ocp.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: optimization
        app.kubernetes.io/name: kruize
    spec:
      serviceAccountName: kruize
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db-kruize
          image: "{{ .Values.global.initContainers.waitFor.repository }}:{{ .Values.global.initContainers.waitFor.tag }}"
          command: ['bash', '-c']
          args:
            - |
              echo "Waiting for Kruize database at {{ include "ros-ocp.fullname" . }}-db-kruize:{{ .Values.database.kruize.port }}..."
              until timeout 3 bash -c "echo > /dev/tcp/{{ include "ros-ocp.fullname" . }}-db-kruize/{{ .Values.database.kruize.port }}" 2>/dev/null; do
                echo "Database not ready yet, retrying in 5 seconds..."
                sleep 5
              done
              echo "Kruize database is ready"
        {{- if .Values.kruize.partitions.createEnabled }}
        - name: create-kruize-partitions
          image: "{{ .Values.kruize.image.repository }}:{{ .Values.kruize.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          command: ["sh"]
          args: ["-c", "export DB_CONFIG_FILE={{ .Values.kruize.env.dbConfigFile }} && /home/autotune/app/target/bin/CreatePartition"]
          env:
            - name: START_AUTOTUNE
              value: "false"
            - name: LOGGING_LEVEL
              value: {{ .Values.kruize.partitions.loggingLevel | quote }}
            - name: ROOT_LOGGING_LEVEL
              value: {{ .Values.kruize.partitions.rootLoggingLevel | quote }}
            - name: DB_CONFIG_FILE
              value: {{ .Values.kruize.env.dbConfigFile | quote }}
            - name: dbdriver
              value: {{ .Values.kruize.env.dbDriver | quote }}
            - name: database_name
              value: {{ .Values.database.kruize.name | quote }}
            - name: clustertype
              value: {{ .Values.kruize.env.clusterType | quote }}
            - name: k8stype
              value: {{ .Values.kruize.env.k8sType | quote }}
            - name: authtype
              value: {{ .Values.kruize.env.authType | quote }}
            - name: monitoringagent
              value: {{ .Values.kruize.env.monitoringAgent | quote }}
            - name: monitoringservice
              value: {{ .Values.kruize.env.monitoringService | quote }}
            - name: monitoringendpoint
              value: {{ .Values.kruize.env.monitoringEndpoint | quote }}
            - name: savetodb
              value: {{ .Values.kruize.env.saveToDb | quote }}
            - name: hibernate_dialect
              value: {{ .Values.kruize.env.hibernateDialect | quote }}
            - name: hibernate_driver
              value: {{ .Values.kruize.env.hibernateDriver | quote }}
            - name: hibernate_c3p0minsize
              value: {{ .Values.kruize.env.hibernateC3p0MinSize | quote }}
            - name: hibernate_c3p0maxsize
              value: {{ .Values.kruize.env.hibernateC3p0MaxSize | quote }}
            - name: hibernate_c3p0timeout
              value: {{ .Values.kruize.env.hibernateC3p0Timeout | quote }}
            - name: hibernate_c3p0maxstatements
              value: {{ .Values.kruize.env.hibernateC3p0MaxStatements | quote }}
            - name: hibernate_hbm2ddlauto
              value: {{ .Values.kruize.env.hibernateHbm2ddlAuto | quote }}
            - name: hibernate_showsql
              value: {{ .Values.kruize.env.hibernateShowSql | quote }}
            - name: hibernate_timezone
              value: {{ .Values.kruize.env.hibernateTimezone | quote }}
            - name: local
              value: {{ .Values.kruize.env.local | quote }}
          volumeMounts:
            - name: kruize-config
              mountPath: /tmp/cdappconfig.json
              subPath: cdappconfig.json
              readOnly: true
          resources:
            {{- toYaml .Values.kruize.partitions.resources | nindent 12 }}
        {{- end }}
      containers:
        {{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }}
        # Envoy sidecar for native JWT authentication
        - name: envoy-proxy
          image: "{{ .Values.jwt_auth.envoy.image.repository }}:{{ .Values.jwt_auth.envoy.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          ports:
            - name: http-proxy
              containerPort: {{ .Values.jwt_auth.envoy.port }}
              protocol: TCP
            - name: admin
              containerPort: {{ .Values.jwt_auth.envoy.adminPort }}
              protocol: TCP
          command:
            - /usr/local/bin/envoy
          args:
            - -c
            - /etc/envoy/envoy.yaml
            - --log-level
            - {{ .Values.jwt_auth.envoy.logLevel | default "info" }}
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
              readOnly: true
          livenessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.jwt_auth.envoy.adminPort }}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.jwt_auth.envoy.adminPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
        {{- end }}
        - name: kruize
          image: "{{ .Values.kruize.image.repository }}:{{ .Values.kruize.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          ports:
            - name: {{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }} http-kruize {{- else }} http {{- end }}
              containerPort: {{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }} 8081 {{- else }} {{ .Values.kruize.port }} {{- end }}
              protocol: TCP
          env:
            - name: LOGGING_LEVEL
              value: {{ .Values.kruize.env.loggingLevel | quote }}
            - name: ROOT_LOGGING_LEVEL
              value: {{ .Values.kruize.env.rootLoggingLevel | quote }}
            - name: DB_CONFIG_FILE
              value: {{ .Values.kruize.env.dbConfigFile | quote }}
            - name: dbdriver
              value: {{ .Values.kruize.env.dbDriver | quote }}
            - name: database_name
              value: {{ .Values.database.kruize.name | quote }}
            - name: clustertype
              value: {{ .Values.kruize.env.clusterType | quote }}
            - name: k8stype
              value: {{ .Values.kruize.env.k8sType | quote }}
            - name: authtype
              value: {{ .Values.kruize.env.authType | quote }}
            - name: monitoringagent
              value: {{ .Values.kruize.env.monitoringAgent | quote }}
            - name: monitoringservice
              value: {{ .Values.kruize.env.monitoringService | quote }}
            - name: monitoringendpoint
              value: {{ .Values.kruize.env.monitoringEndpoint | quote }}
            - name: savetodb
              value: {{ .Values.kruize.env.saveToDb | quote }}
            - name: local
              value: {{ .Values.kruize.env.local | quote }}
            - name: LOG_ALL_HTTP_REQ_AND_RESPONSE
              value: {{ .Values.kruize.env.logAllHttpReqAndResponse | quote }}
            - name: hibernate_dialect
              value: {{ .Values.kruize.env.hibernateDialect | quote }}
            - name: hibernate_driver
              value: {{ .Values.kruize.env.hibernateDriver | quote }}
            - name: hibernate_c3p0minsize
              value: {{ .Values.kruize.env.hibernateC3p0MinSize | quote }}
            - name: hibernate_c3p0maxsize
              value: {{ .Values.kruize.env.hibernateC3p0MaxSize | quote }}
            - name: hibernate_c3p0timeout
              value: {{ .Values.kruize.env.hibernateC3p0Timeout | quote }}
            - name: hibernate_c3p0maxstatements
              value: {{ .Values.kruize.env.hibernateC3p0MaxStatements | quote }}
            - name: hibernate_hbm2ddlauto
              value: {{ .Values.kruize.env.hibernateHbm2ddlAuto | quote }}
            - name: hibernate_showsql
              value: {{ .Values.kruize.env.hibernateShowSql | quote }}
            - name: hibernate_timezone
              value: {{ .Values.kruize.env.hibernateTimezone | quote }}
            - name: plots
              value: {{ .Values.kruize.env.plots | quote }}
          volumeMounts:
            - name: kruize-config
              mountPath: /tmp/cdappconfig.json
              subPath: cdappconfig.json
              readOnly: true
          livenessProbe:
            httpGet:
              path: /listPerformanceProfiles
              port: {{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }} 8081 {{- else }} {{ .Values.kruize.port }} {{- end }}
            initialDelaySeconds: 60
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /listPerformanceProfiles
              port: {{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }} 8081 {{- else }} {{ .Values.kruize.port }} {{- end }}
            initialDelaySeconds: 30
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
          resources:
            {{- toYaml .Values.resources.kruize | nindent 12 }}
      volumes:
        {{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }}
        # Envoy configuration volume
        - name: envoy-config
          configMap:
            name: {{ include "ros-ocp.fullname" . }}-envoy-config
            items:
              - key: envoy.yaml
                path: envoy.yaml
        {{- end }}
        - name: kruize-config
          configMap:
            name: {{ include "ros-ocp.fullname" . }}-kruize-config